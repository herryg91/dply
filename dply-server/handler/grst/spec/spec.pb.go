// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.11.4
// source: spec.proto

package spec

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/herryg91/cdd/protoc-gen-cdd/ext/cddapis/cdd/api"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEnvarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string `protobuf:"bytes,3,opt,name=Project,json=project,proto3" json:"project,omitempty" default:"default"`
	Env     string `protobuf:"bytes,1,opt,name=Env,json=env,proto3" json:"env,omitempty" validate:"required"`
	Name    string `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"name,omitempty" validate:"required"`
}

func (x *GetEnvarReq) Reset() {
	*x = GetEnvarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnvarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvarReq) ProtoMessage() {}

func (x *GetEnvarReq) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvarReq.ProtoReflect.Descriptor instead.
func (*GetEnvarReq) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{0}
}

func (x *GetEnvarReq) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *GetEnvarReq) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *GetEnvarReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpsertEnvarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project   string `protobuf:"bytes,4,opt,name=Project,json=project,proto3" json:"project,omitempty" default:"default"`
	Env       string `protobuf:"bytes,1,opt,name=Env,json=env,proto3" json:"env,omitempty" validate:"required"`
	Name      string `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"name,omitempty" validate:"required"`
	Variables string `protobuf:"bytes,3,opt,name=Variables,json=variables,proto3" json:"variables,omitempty" validate:"required,json"`
}

func (x *UpsertEnvarReq) Reset() {
	*x = UpsertEnvarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertEnvarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertEnvarReq) ProtoMessage() {}

func (x *UpsertEnvarReq) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertEnvarReq.ProtoReflect.Descriptor instead.
func (*UpsertEnvarReq) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertEnvarReq) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *UpsertEnvarReq) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *UpsertEnvarReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertEnvarReq) GetVariables() string {
	if x != nil {
		return x.Variables
	}
	return ""
}

type Envar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Variables string `protobuf:"bytes,1,opt,name=Variables,json=variables,proto3" json:"variables,omitempty"`
}

func (x *Envar) Reset() {
	*x = Envar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envar) ProtoMessage() {}

func (x *Envar) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envar.ProtoReflect.Descriptor instead.
func (*Envar) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{2}
}

func (x *Envar) GetVariables() string {
	if x != nil {
		return x.Variables
	}
	return ""
}

type GetScaleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string `protobuf:"bytes,3,opt,name=Project,json=project,proto3" json:"project,omitempty" default:"default"`
	Env     string `protobuf:"bytes,1,opt,name=Env,json=env,proto3" json:"env,omitempty" validate:"required"`
	Name    string `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"name,omitempty" validate:"required"`
}

func (x *GetScaleReq) Reset() {
	*x = GetScaleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScaleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScaleReq) ProtoMessage() {}

func (x *GetScaleReq) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScaleReq.ProtoReflect.Descriptor instead.
func (*GetScaleReq) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{3}
}

func (x *GetScaleReq) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *GetScaleReq) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *GetScaleReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpsertScaleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project              string `protobuf:"bytes,10,opt,name=Project,json=project,proto3" json:"project,omitempty" default:"default"`
	Env                  string `protobuf:"bytes,1,opt,name=Env,json=env,proto3" json:"env,omitempty" validate:"required"`
	Name                 string `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"name,omitempty" validate:"required"`
	MinReplica           int32  `protobuf:"varint,3,opt,name=MinReplica,json=min_replica,proto3" json:"min_replica,omitempty" validate:"required,min=1"`
	MaxReplica           int32  `protobuf:"varint,4,opt,name=MaxReplica,json=max_replica,proto3" json:"max_replica,omitempty" validate:"required,min=1"`
	MinCpu               int32  `protobuf:"varint,5,opt,name=MinCpu,json=min_cpu,proto3" json:"min_cpu,omitempty" validate:"required,min=10"`
	MaxCpu               int32  `protobuf:"varint,6,opt,name=MaxCpu,json=max_cpu,proto3" json:"max_cpu,omitempty" validate:"required,min=10"`
	MinMemory            int32  `protobuf:"varint,7,opt,name=MinMemory,json=min_memory,proto3" json:"min_memory,omitempty" validate:"required,min=10"`
	MaxMemory            int32  `protobuf:"varint,8,opt,name=MaxMemory,json=max_memory,proto3" json:"max_memory,omitempty" validate:"required,min=10"`
	TargetCPUUtilization int32  `protobuf:"varint,9,opt,name=TargetCPUUtilization,json=target_cpu,proto3" json:"target_cpu,omitempty" validate:"required,min=1,max=100"`
}

func (x *UpsertScaleReq) Reset() {
	*x = UpsertScaleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertScaleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertScaleReq) ProtoMessage() {}

func (x *UpsertScaleReq) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertScaleReq.ProtoReflect.Descriptor instead.
func (*UpsertScaleReq) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{4}
}

func (x *UpsertScaleReq) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *UpsertScaleReq) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *UpsertScaleReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertScaleReq) GetMinReplica() int32 {
	if x != nil {
		return x.MinReplica
	}
	return 0
}

func (x *UpsertScaleReq) GetMaxReplica() int32 {
	if x != nil {
		return x.MaxReplica
	}
	return 0
}

func (x *UpsertScaleReq) GetMinCpu() int32 {
	if x != nil {
		return x.MinCpu
	}
	return 0
}

func (x *UpsertScaleReq) GetMaxCpu() int32 {
	if x != nil {
		return x.MaxCpu
	}
	return 0
}

func (x *UpsertScaleReq) GetMinMemory() int32 {
	if x != nil {
		return x.MinMemory
	}
	return 0
}

func (x *UpsertScaleReq) GetMaxMemory() int32 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *UpsertScaleReq) GetTargetCPUUtilization() int32 {
	if x != nil {
		return x.TargetCPUUtilization
	}
	return 0
}

type Scale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project              string `protobuf:"bytes,1,opt,name=Project,json=project,proto3" json:"project,omitempty"`
	Env                  string `protobuf:"bytes,2,opt,name=Env,json=env,proto3" json:"env,omitempty"`
	Name                 string `protobuf:"bytes,3,opt,name=Name,json=name,proto3" json:"name,omitempty"`
	MinReplica           int32  `protobuf:"varint,4,opt,name=MinReplica,json=min_replica,proto3" json:"min_replica,omitempty"`
	MaxReplica           int32  `protobuf:"varint,5,opt,name=MaxReplica,json=max_replica,proto3" json:"max_replica,omitempty"`
	MinCpu               int32  `protobuf:"varint,6,opt,name=MinCpu,json=min_cpu,proto3" json:"min_cpu,omitempty"`
	MaxCpu               int32  `protobuf:"varint,7,opt,name=MaxCpu,json=max_cpu,proto3" json:"max_cpu,omitempty"`
	MinMemory            int32  `protobuf:"varint,8,opt,name=MinMemory,json=min_memory,proto3" json:"min_memory,omitempty"`
	MaxMemory            int32  `protobuf:"varint,9,opt,name=MaxMemory,json=max_memory,proto3" json:"max_memory,omitempty"`
	TargetCPUUtilization int32  `protobuf:"varint,10,opt,name=TargetCPUUtilization,json=target_cpu,proto3" json:"target_cpu,omitempty"`
}

func (x *Scale) Reset() {
	*x = Scale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scale) ProtoMessage() {}

func (x *Scale) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scale.ProtoReflect.Descriptor instead.
func (*Scale) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{5}
}

func (x *Scale) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *Scale) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *Scale) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Scale) GetMinReplica() int32 {
	if x != nil {
		return x.MinReplica
	}
	return 0
}

func (x *Scale) GetMaxReplica() int32 {
	if x != nil {
		return x.MaxReplica
	}
	return 0
}

func (x *Scale) GetMinCpu() int32 {
	if x != nil {
		return x.MinCpu
	}
	return 0
}

func (x *Scale) GetMaxCpu() int32 {
	if x != nil {
		return x.MaxCpu
	}
	return 0
}

func (x *Scale) GetMinMemory() int32 {
	if x != nil {
		return x.MinMemory
	}
	return 0
}

func (x *Scale) GetMaxMemory() int32 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *Scale) GetTargetCPUUtilization() int32 {
	if x != nil {
		return x.TargetCPUUtilization
	}
	return 0
}

type GetPortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string `protobuf:"bytes,3,opt,name=Project,json=project,proto3" json:"project,omitempty" default:"default"`
	Env     string `protobuf:"bytes,1,opt,name=Env,json=env,proto3" json:"env,omitempty" validate:"required"`
	Name    string `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"name,omitempty" validate:"required"`
}

func (x *GetPortReq) Reset() {
	*x = GetPortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortReq) ProtoMessage() {}

func (x *GetPortReq) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortReq.ProtoReflect.Descriptor instead.
func (*GetPortReq) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{6}
}

func (x *GetPortReq) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *GetPortReq) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *GetPortReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpsertPortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project    string  `protobuf:"bytes,6,opt,name=Project,json=project,proto3" json:"project,omitempty" default:"default"`
	Env        string  `protobuf:"bytes,1,opt,name=Env,json=env,proto3" json:"env,omitempty" validate:"required"`
	Name       string  `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"name,omitempty" validate:"required"`
	AccessType string  `protobuf:"bytes,3,opt,name=AccessType,json=access_type,proto3" json:"access_type,omitempty" validate:"required,enum=ClusterIP|LoadBalancer"`
	ExternalIP string  `protobuf:"bytes,4,opt,name=ExternalIP,json=external_ip,proto3" json:"external_ip,omitempty"`
	Ports      []*Port `protobuf:"bytes,5,rep,name=Ports,json=ports,proto3" json:"ports,omitempty"`
}

func (x *UpsertPortReq) Reset() {
	*x = UpsertPortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertPortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertPortReq) ProtoMessage() {}

func (x *UpsertPortReq) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertPortReq.ProtoReflect.Descriptor instead.
func (*UpsertPortReq) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{7}
}

func (x *UpsertPortReq) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *UpsertPortReq) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *UpsertPortReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertPortReq) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *UpsertPortReq) GetExternalIP() string {
	if x != nil {
		return x.ExternalIP
	}
	return ""
}

func (x *UpsertPortReq) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

type Ports struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ports      []*Port `protobuf:"bytes,1,rep,name=Ports,json=ports,proto3" json:"ports,omitempty"`
	AccessType string  `protobuf:"bytes,2,opt,name=AccessType,json=access_type,proto3" json:"access_type,omitempty"`
	ExternalIP string  `protobuf:"bytes,3,opt,name=ExternalIP,json=external_ip,proto3" json:"external_ip,omitempty"`
}

func (x *Ports) Reset() {
	*x = Ports{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ports) ProtoMessage() {}

func (x *Ports) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ports.ProtoReflect.Descriptor instead.
func (*Ports) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{8}
}

func (x *Ports) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Ports) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *Ports) GetExternalIP() string {
	if x != nil {
		return x.ExternalIP
	}
	return ""
}

type Port struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortName   string `protobuf:"bytes,1,opt,name=PortName,json=name,proto3" json:"name,omitempty" validate:"required"`
	Port       int32  `protobuf:"varint,2,opt,name=Port,json=port,proto3" json:"port,omitempty" validate:"required"`
	RemotePort int32  `protobuf:"varint,3,opt,name=RemotePort,json=remote_port,proto3" json:"remote_port,omitempty" validate:"required"`
	Protocol   string `protobuf:"bytes,4,opt,name=Protocol,json=protocol,proto3" json:"protocol,omitempty" validate:"required,enum=TCP|UDP|SCTP"`
}

func (x *Port) Reset() {
	*x = Port{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{9}
}

func (x *Port) GetPortName() string {
	if x != nil {
		return x.PortName
	}
	return ""
}

func (x *Port) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Port) GetRemotePort() int32 {
	if x != nil {
		return x.RemotePort
	}
	return 0
}

func (x *Port) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type GetPortTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateName string `protobuf:"bytes,1,opt,name=TemplateName,json=template_name,proto3" json:"template_name,omitempty" validate:"required"`
}

func (x *GetPortTemplateReq) Reset() {
	*x = GetPortTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortTemplateReq) ProtoMessage() {}

func (x *GetPortTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortTemplateReq.ProtoReflect.Descriptor instead.
func (*GetPortTemplateReq) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{10}
}

func (x *GetPortTemplateReq) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

type UpdatePortTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateName string  `protobuf:"bytes,1,opt,name=TemplateName,json=template_name,proto3" json:"template_name,omitempty" validate:"required"`
	Ports        []*Port `protobuf:"bytes,2,rep,name=Ports,json=ports,proto3" json:"ports,omitempty"`
	AccessType   string  `protobuf:"bytes,3,opt,name=AccessType,json=access_type,proto3" json:"access_type,omitempty"`
	ExternalIP   string  `protobuf:"bytes,4,opt,name=ExternalIP,json=external_ip,proto3" json:"external_ip,omitempty"`
}

func (x *UpdatePortTemplateReq) Reset() {
	*x = UpdatePortTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePortTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePortTemplateReq) ProtoMessage() {}

func (x *UpdatePortTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePortTemplateReq.ProtoReflect.Descriptor instead.
func (*UpdatePortTemplateReq) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{11}
}

func (x *UpdatePortTemplateReq) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *UpdatePortTemplateReq) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *UpdatePortTemplateReq) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *UpdatePortTemplateReq) GetExternalIP() string {
	if x != nil {
		return x.ExternalIP
	}
	return ""
}

type GetAffinityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string `protobuf:"bytes,3,opt,name=Project,json=project,proto3" json:"project,omitempty" default:"default"`
	Env     string `protobuf:"bytes,1,opt,name=Env,json=env,proto3" json:"env,omitempty" validate:"required"`
	Name    string `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"name,omitempty" validate:"required"`
}

func (x *GetAffinityReq) Reset() {
	*x = GetAffinityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAffinityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAffinityReq) ProtoMessage() {}

func (x *GetAffinityReq) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAffinityReq.ProtoReflect.Descriptor instead.
func (*GetAffinityReq) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{12}
}

func (x *GetAffinityReq) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *GetAffinityReq) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *GetAffinityReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpsertAffinityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project         string          `protobuf:"bytes,6,opt,name=Project,json=project,proto3" json:"project,omitempty" default:"default"`
	Env             string          `protobuf:"bytes,1,opt,name=Env,json=env,proto3" json:"env,omitempty" validate:"required"`
	Name            string          `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"name,omitempty" validate:"required"`
	NodeAffinity    []*AffinityTerm `protobuf:"bytes,3,rep,name=NodeAffinity,json=node_affinity,proto3" json:"node_affinity,omitempty"`
	PodAffinity     []*AffinityTerm `protobuf:"bytes,4,rep,name=PodAffinity,json=pod_affinity,proto3" json:"pod_affinity,omitempty"`
	PodAntiAffinity []*AffinityTerm `protobuf:"bytes,5,rep,name=PodAntiAffinity,json=pod_anti_affinity,proto3" json:"pod_anti_affinity,omitempty"`
}

func (x *UpsertAffinityReq) Reset() {
	*x = UpsertAffinityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAffinityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAffinityReq) ProtoMessage() {}

func (x *UpsertAffinityReq) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAffinityReq.ProtoReflect.Descriptor instead.
func (*UpsertAffinityReq) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{13}
}

func (x *UpsertAffinityReq) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *UpsertAffinityReq) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *UpsertAffinityReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertAffinityReq) GetNodeAffinity() []*AffinityTerm {
	if x != nil {
		return x.NodeAffinity
	}
	return nil
}

func (x *UpsertAffinityReq) GetPodAffinity() []*AffinityTerm {
	if x != nil {
		return x.PodAffinity
	}
	return nil
}

func (x *UpsertAffinityReq) GetPodAntiAffinity() []*AffinityTerm {
	if x != nil {
		return x.PodAntiAffinity
	}
	return nil
}

type Affinity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAffinity    []*AffinityTerm `protobuf:"bytes,3,rep,name=NodeAffinity,json=node_affinity,proto3" json:"node_affinity,omitempty" validate:"required"`
	PodAffinity     []*AffinityTerm `protobuf:"bytes,4,rep,name=PodAffinity,json=pod_affinity,proto3" json:"pod_affinity,omitempty" validate:"required"`
	PodAntiAffinity []*AffinityTerm `protobuf:"bytes,5,rep,name=PodAntiAffinity,json=pod_anti_affinity,proto3" json:"pod_anti_affinity,omitempty" validate:"required"`
}

func (x *Affinity) Reset() {
	*x = Affinity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Affinity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Affinity) ProtoMessage() {}

func (x *Affinity) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Affinity.ProtoReflect.Descriptor instead.
func (*Affinity) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{14}
}

func (x *Affinity) GetNodeAffinity() []*AffinityTerm {
	if x != nil {
		return x.NodeAffinity
	}
	return nil
}

func (x *Affinity) GetPodAffinity() []*AffinityTerm {
	if x != nil {
		return x.PodAffinity
	}
	return nil
}

func (x *Affinity) GetPodAntiAffinity() []*AffinityTerm {
	if x != nil {
		return x.PodAntiAffinity
	}
	return nil
}

type AffinityTerm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode        string   `protobuf:"bytes,1,opt,name=Mode,json=mode,proto3" json:"mode,omitempty" validate:"required,enum=required|preferred"`
	Key         string   `protobuf:"bytes,2,opt,name=Key,json=key,proto3" json:"key,omitempty" validate:"required"`
	Operator    string   `protobuf:"bytes,3,opt,name=Operator,json=operator,proto3" json:"operator,omitempty" validate:"required,enum=In|NotIn|Exists|DoesNotExist|Gt|Lt"`
	Values      []string `protobuf:"bytes,4,rep,name=Values,json=values,proto3" json:"values,omitempty"`
	Weight      int32    `protobuf:"varint,5,opt,name=Weight,json=weight,proto3" json:"weight,omitempty" validate:"min=0,max=100"`
	TopologyKey string   `protobuf:"bytes,6,opt,name=TopologyKey,json=topology_key,proto3" json:"topology_key,omitempty"`
}

func (x *AffinityTerm) Reset() {
	*x = AffinityTerm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AffinityTerm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AffinityTerm) ProtoMessage() {}

func (x *AffinityTerm) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AffinityTerm.ProtoReflect.Descriptor instead.
func (*AffinityTerm) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{15}
}

func (x *AffinityTerm) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *AffinityTerm) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AffinityTerm) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *AffinityTerm) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *AffinityTerm) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *AffinityTerm) GetTopologyKey() string {
	if x != nil {
		return x.TopologyKey
	}
	return ""
}

type GetAffinityTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateName string `protobuf:"bytes,1,opt,name=TemplateName,json=template_name,proto3" json:"template_name,omitempty" validate:"required"`
}

func (x *GetAffinityTemplateReq) Reset() {
	*x = GetAffinityTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAffinityTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAffinityTemplateReq) ProtoMessage() {}

func (x *GetAffinityTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAffinityTemplateReq.ProtoReflect.Descriptor instead.
func (*GetAffinityTemplateReq) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{16}
}

func (x *GetAffinityTemplateReq) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

type UpdateAffinityTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateName    string          `protobuf:"bytes,1,opt,name=TemplateName,json=template_name,proto3" json:"template_name,omitempty" validate:"required"`
	NodeAffinity    []*AffinityTerm `protobuf:"bytes,2,rep,name=NodeAffinity,json=node_affinity,proto3" json:"node_affinity,omitempty"`
	PodAffinity     []*AffinityTerm `protobuf:"bytes,3,rep,name=PodAffinity,json=pod_affinity,proto3" json:"pod_affinity,omitempty"`
	PodAntiAffinity []*AffinityTerm `protobuf:"bytes,4,rep,name=PodAntiAffinity,json=pod_anti_affinity,proto3" json:"pod_anti_affinity,omitempty"`
}

func (x *UpdateAffinityTemplateReq) Reset() {
	*x = UpdateAffinityTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAffinityTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAffinityTemplateReq) ProtoMessage() {}

func (x *UpdateAffinityTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAffinityTemplateReq.ProtoReflect.Descriptor instead.
func (*UpdateAffinityTemplateReq) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateAffinityTemplateReq) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *UpdateAffinityTemplateReq) GetNodeAffinity() []*AffinityTerm {
	if x != nil {
		return x.NodeAffinity
	}
	return nil
}

func (x *UpdateAffinityTemplateReq) GetPodAffinity() []*AffinityTerm {
	if x != nil {
		return x.PodAffinity
	}
	return nil
}

func (x *UpdateAffinityTemplateReq) GetPodAntiAffinity() []*AffinityTerm {
	if x != nil {
		return x.PodAntiAffinity
	}
	return nil
}

var File_spec_proto protoreflect.FileDescriptor

var file_spec_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x63, 0x64, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x64, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x76, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x82, 0xc9, 0x3b, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x45, 0x6e,
	0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x20, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xaa, 0x01, 0x0a,
	0x0e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x76, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x25, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0x82, 0xc9, 0x3b, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x20, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xc2, 0x8a, 0x3b,
	0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x7c, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x09,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x05, 0x45, 0x6e, 0x76,
	0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x22, 0x76, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x25, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0x82, 0xc9, 0x3b, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x20, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xed, 0x03, 0x0a, 0x0e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x82, 0xc9,
	0x3b, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x03, 0x65,
	0x6e, 0x76, 0x12, 0x20, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x4d, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x12, 0xc2, 0x8a, 0x3b, 0x0e, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x7c, 0x6d, 0x69, 0x6e, 0x3d, 0x31, 0x52, 0x0b, 0x6d, 0x69,
	0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x33, 0x0a, 0x0a, 0x4d, 0x61, 0x78,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x12, 0xc2,
	0x8a, 0x3b, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x7c, 0x6d, 0x69, 0x6e, 0x3d,
	0x31, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x2c,
	0x0a, 0x06, 0x4d, 0x69, 0x6e, 0x43, 0x70, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x13,
	0xc2, 0x8a, 0x3b, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x7c, 0x6d, 0x69, 0x6e,
	0x3d, 0x31, 0x30, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x70, 0x75, 0x12, 0x2c, 0x0a, 0x06,
	0x4d, 0x61, 0x78, 0x43, 0x70, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x13, 0xc2, 0x8a,
	0x3b, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x7c, 0x6d, 0x69, 0x6e, 0x3d, 0x31,
	0x30, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x70, 0x75, 0x12, 0x32, 0x0a, 0x09, 0x4d, 0x69,
	0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x13, 0xc2,
	0x8a, 0x3b, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x7c, 0x6d, 0x69, 0x6e, 0x3d,
	0x31, 0x30, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x32,
	0x0a, 0x09, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x13, 0xc2, 0x8a, 0x3b, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x7c,
	0x6d, 0x69, 0x6e, 0x3d, 0x31, 0x30, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x44, 0x0a, 0x14, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x50, 0x55, 0x55,
	0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x1a, 0xc2, 0x8a, 0x3b, 0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x7c, 0x6d,
	0x69, 0x6e, 0x3d, 0x31, 0x7c, 0x6d, 0x61, 0x78, 0x3d, 0x31, 0x30, 0x30, 0x52, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x70, 0x75, 0x22, 0xa3, 0x02, 0x0a, 0x05, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x45, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x4d, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x12, 0x1f, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x12, 0x17, 0x0a, 0x06, 0x4d, 0x69, 0x6e, 0x43, 0x70, 0x75, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x70, 0x75, 0x12, 0x17, 0x0a,
	0x06, 0x4d, 0x61, 0x78, 0x43, 0x70, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d,
	0x61, 0x78, 0x5f, 0x63, 0x70, 0x75, 0x12, 0x1d, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x14, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x50,
	0x55, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x70, 0x75, 0x22, 0x75,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x82,
	0xc9, 0x3b, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x03,
	0x65, 0x6e, 0x76, 0x12, 0x20, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x82, 0xc9, 0x3b, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e,
	0x0a, 0x03, 0x45, 0x6e, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x20,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a,
	0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x49, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x28, 0xc2, 0x8a, 0x3b, 0x24, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x7c, 0x65, 0x6e, 0x75, 0x6d, 0x3d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x50, 0x2c, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x12, 0x20, 0x0a, 0x05,
	0x50, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x70,
	0x65, 0x63, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x6b,
	0x0a, 0x05, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x05, 0x50, 0x6f, 0x72, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0a, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x22, 0xb9, 0x01, 0x0a, 0x04,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x50, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2d, 0x0a, 0x0a,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x0b,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xc2,
	0x8a, 0x3b, 0x1a, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x7c, 0x65, 0x6e, 0x75, 0x6d,
	0x3d, 0x54, 0x43, 0x50, 0x2c, 0x55, 0x44, 0x50, 0x2c, 0x53, 0x43, 0x54, 0x50, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a,
	0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x52, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xae, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x0d,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x05, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12,
	0x1f, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x70, 0x22, 0x79, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x82, 0xc9, 0x3b, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x45, 0x6e,
	0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x20, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xac, 0x02, 0x0a,
	0x11, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x25, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0x82, 0xc9, 0x3b, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x45, 0x6e, 0x76,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x20, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x4e,
	0x6f, 0x64, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x79, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x66, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x0b, 0x50, 0x6f, 0x64, 0x41, 0x66, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x70, 0x65, 0x63,
	0x2e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x0c, 0x70,
	0x6f, 0x64, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0f, 0x50,
	0x6f, 0x64, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x66, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x11, 0x70, 0x6f, 0x64, 0x5f, 0x61, 0x6e,
	0x74, 0x69, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x22, 0xe4, 0x01, 0x0a, 0x08,
	0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65,
	0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x54, 0x65,
	0x72, 0x6d, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12,
	0x43, 0x0a, 0x0b, 0x50, 0x6f, 0x64, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x66, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x0c, 0x70, 0x6f, 0x64, 0x5f, 0x61, 0x66, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0f, 0x50, 0x6f, 0x64, 0x41, 0x6e, 0x74, 0x69, 0x41,
	0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x54, 0x65, 0x72,
	0x6d, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52,
	0x11, 0x70, 0x6f, 0x64, 0x5f, 0x61, 0x6e, 0x74, 0x69, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x79, 0x22, 0xa0, 0x02, 0x0a, 0x0c, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x54,
	0x65, 0x72, 0x6d, 0x12, 0x38, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x24, 0xc2, 0x8a, 0x3b, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x7c,
	0x65, 0x6e, 0x75, 0x6d, 0x3d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2c, 0x70, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x50, 0x0a,
	0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x34, 0xc2, 0x8a, 0x3b, 0x30, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x7c, 0x65, 0x6e,
	0x75, 0x6d, 0x3d, 0x49, 0x6e, 0x2c, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x2c, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x2c, 0x44, 0x6f, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x2c,
	0x47, 0x74, 0x2c, 0x4c, 0x74, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x11, 0xc2, 0x8a, 0x3b, 0x0d, 0x6d, 0x69, 0x6e,
	0x3d, 0x30, 0x7c, 0x6d, 0x61, 0x78, 0x3d, 0x31, 0x30, 0x30, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4b, 0x65,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0x4b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x31, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x52, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xfe, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x31, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc2, 0x8a, 0x3b, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x52, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x70, 0x65, 0x63,
	0x2e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x0d, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x0b,
	0x50, 0x6f, 0x64, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x79, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x0c, 0x70, 0x6f, 0x64, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0f, 0x50, 0x6f, 0x64, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x54, 0x65, 0x72, 0x6d,
	0x52, 0x11, 0x70, 0x6f, 0x64, 0x5f, 0x61, 0x6e, 0x74, 0x69, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x79, 0x32, 0x8c, 0x05, 0x0a, 0x07, 0x53, 0x70, 0x65, 0x63, 0x41, 0x70, 0x69, 0x12,
	0x3f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x61, 0x72, 0x12, 0x11, 0x2e, 0x73, 0x70,
	0x65, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0b,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x45, 0x6e, 0x76, 0x61, 0x72, 0x22, 0x13, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x65, 0x6e, 0x76, 0x61, 0x72,
	0x12, 0x5a, 0x0a, 0x0b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x76, 0x61, 0x72, 0x12,
	0x14, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x76,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f,
	0x65, 0x6e, 0x76, 0x61, 0x72, 0x2f, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x3f, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x11, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x73, 0x70,
	0x65, 0x63, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d,
	0x12, 0x0b, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x5a, 0x0a,
	0x0b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x2f, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x73, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x73, 0x70,
	0x65, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x57, 0x0a, 0x0a, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x13, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f,
	0x73, 0x70, 0x65, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x12, 0x4b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x66, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f,
	0x73, 0x70, 0x65, 0x63, 0x2f, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x63, 0x0a,
	0x0e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12,
	0x17, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x66, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x73, 0x70,
	0x65, 0x63, 0x2f, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x75, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x3b, 0x73, 0x70, 0x65, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spec_proto_rawDescOnce sync.Once
	file_spec_proto_rawDescData = file_spec_proto_rawDesc
)

func file_spec_proto_rawDescGZIP() []byte {
	file_spec_proto_rawDescOnce.Do(func() {
		file_spec_proto_rawDescData = protoimpl.X.CompressGZIP(file_spec_proto_rawDescData)
	})
	return file_spec_proto_rawDescData
}

var file_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_spec_proto_goTypes = []interface{}{
	(*GetEnvarReq)(nil),               // 0: spec.GetEnvarReq
	(*UpsertEnvarReq)(nil),            // 1: spec.UpsertEnvarReq
	(*Envar)(nil),                     // 2: spec.Envar
	(*GetScaleReq)(nil),               // 3: spec.GetScaleReq
	(*UpsertScaleReq)(nil),            // 4: spec.UpsertScaleReq
	(*Scale)(nil),                     // 5: spec.Scale
	(*GetPortReq)(nil),                // 6: spec.GetPortReq
	(*UpsertPortReq)(nil),             // 7: spec.UpsertPortReq
	(*Ports)(nil),                     // 8: spec.Ports
	(*Port)(nil),                      // 9: spec.Port
	(*GetPortTemplateReq)(nil),        // 10: spec.GetPortTemplateReq
	(*UpdatePortTemplateReq)(nil),     // 11: spec.UpdatePortTemplateReq
	(*GetAffinityReq)(nil),            // 12: spec.GetAffinityReq
	(*UpsertAffinityReq)(nil),         // 13: spec.UpsertAffinityReq
	(*Affinity)(nil),                  // 14: spec.Affinity
	(*AffinityTerm)(nil),              // 15: spec.AffinityTerm
	(*GetAffinityTemplateReq)(nil),    // 16: spec.GetAffinityTemplateReq
	(*UpdateAffinityTemplateReq)(nil), // 17: spec.UpdateAffinityTemplateReq
	(*empty.Empty)(nil),               // 18: google.protobuf.Empty
}
var file_spec_proto_depIdxs = []int32{
	9,  // 0: spec.UpsertPortReq.Ports:type_name -> spec.Port
	9,  // 1: spec.Ports.Ports:type_name -> spec.Port
	9,  // 2: spec.UpdatePortTemplateReq.Ports:type_name -> spec.Port
	15, // 3: spec.UpsertAffinityReq.NodeAffinity:type_name -> spec.AffinityTerm
	15, // 4: spec.UpsertAffinityReq.PodAffinity:type_name -> spec.AffinityTerm
	15, // 5: spec.UpsertAffinityReq.PodAntiAffinity:type_name -> spec.AffinityTerm
	15, // 6: spec.Affinity.NodeAffinity:type_name -> spec.AffinityTerm
	15, // 7: spec.Affinity.PodAffinity:type_name -> spec.AffinityTerm
	15, // 8: spec.Affinity.PodAntiAffinity:type_name -> spec.AffinityTerm
	15, // 9: spec.UpdateAffinityTemplateReq.NodeAffinity:type_name -> spec.AffinityTerm
	15, // 10: spec.UpdateAffinityTemplateReq.PodAffinity:type_name -> spec.AffinityTerm
	15, // 11: spec.UpdateAffinityTemplateReq.PodAntiAffinity:type_name -> spec.AffinityTerm
	0,  // 12: spec.SpecApi.GetEnvar:input_type -> spec.GetEnvarReq
	1,  // 13: spec.SpecApi.UpsertEnvar:input_type -> spec.UpsertEnvarReq
	3,  // 14: spec.SpecApi.GetScale:input_type -> spec.GetScaleReq
	4,  // 15: spec.SpecApi.UpsertScale:input_type -> spec.UpsertScaleReq
	6,  // 16: spec.SpecApi.GetPort:input_type -> spec.GetPortReq
	7,  // 17: spec.SpecApi.UpsertPort:input_type -> spec.UpsertPortReq
	12, // 18: spec.SpecApi.GetAffinity:input_type -> spec.GetAffinityReq
	13, // 19: spec.SpecApi.UpsertAffinity:input_type -> spec.UpsertAffinityReq
	2,  // 20: spec.SpecApi.GetEnvar:output_type -> spec.Envar
	18, // 21: spec.SpecApi.UpsertEnvar:output_type -> google.protobuf.Empty
	5,  // 22: spec.SpecApi.GetScale:output_type -> spec.Scale
	18, // 23: spec.SpecApi.UpsertScale:output_type -> google.protobuf.Empty
	8,  // 24: spec.SpecApi.GetPort:output_type -> spec.Ports
	18, // 25: spec.SpecApi.UpsertPort:output_type -> google.protobuf.Empty
	14, // 26: spec.SpecApi.GetAffinity:output_type -> spec.Affinity
	18, // 27: spec.SpecApi.UpsertAffinity:output_type -> google.protobuf.Empty
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_spec_proto_init() }
func file_spec_proto_init() {
	if File_spec_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spec_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnvarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertEnvarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Envar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScaleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertScaleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertPortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ports); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Port); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePortTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAffinityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAffinityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Affinity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AffinityTerm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAffinityTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAffinityTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spec_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spec_proto_goTypes,
		DependencyIndexes: file_spec_proto_depIdxs,
		MessageInfos:      file_spec_proto_msgTypes,
	}.Build()
	File_spec_proto = out.File
	file_spec_proto_rawDesc = nil
	file_spec_proto_goTypes = nil
	file_spec_proto_depIdxs = nil
}
